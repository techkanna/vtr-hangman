{"version":3,"sources":["components/Header.js","components/FigureContainer.js","Helpers.js","components/FinalMessage.js","components/Notification.js","components/WrongLetters.js","components/Word.js","App.js","serviceWorker.js","index.js"],"names":["Header","FigureContainer","wrongLetters","height","width","className","x1","y1","x2","y2","cx","cy","r","notification","setter","setTimeout","getStatus","sw","cl","wl","status","split","forEach","letter","includes","length","FinalMessage","selectedWord","correctLetters","setPlayable","playAgain","finalMsg","playable","useEffect","style","display","onClick","Notification","showNotification","id","WrongLetters","map","i","key","Word","words","Math","floor","random","App","useState","setCorrectLetter","setWrongLetters","setShowNotification","keyHandler","e","keyCode","toLowerCase","c","w","window","addEventListener","removeEventListener","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.68243f87.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header() {\r\n  return (\r\n    <>\r\n      <h1>Hangman</h1>\r\n      <p>Find the hidden word - Enter a letter</p>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nfunction FigureContainer({ wrongLetters }) {\r\n  return (\r\n    <svg height=\"250\" width=\"200\" className=\"figure-container\">\r\n      {/* <!-- Rod --> */}\r\n      <line x1=\"60\" y1=\"20\" x2=\"140\" y2=\"20\" />\r\n      <line x1=\"140\" y1=\"20\" x2=\"140\" y2=\"50\" />\r\n      <line x1=\"60\" y1=\"20\" x2=\"60\" y2=\"230\" />\r\n      <line x1=\"20\" y1=\"230\" x2=\"100\" y2=\"230\" />\r\n\r\n      {/* <!-- Head --> */}\r\n      {wrongLetters[0] && <circle cx=\"140\" cy=\"70\" r=\"20\" />}\r\n      {/* <!-- Body --> */}\r\n      {wrongLetters[1] && <line x1=\"140\" y1=\"90\" x2=\"140\" y2=\"150\" />}\r\n      {/* <!-- Arms --> */}\r\n      {wrongLetters[2] && <line x1=\"140\" y1=\"120\" x2=\"120\" y2=\"100\" />}\r\n      {wrongLetters[3] && <line x1=\"140\" y1=\"120\" x2=\"160\" y2=\"100\" />}\r\n      {/* <!-- Legs --> */}\r\n      {wrongLetters[4] && <line x1=\"140\" y1=\"150\" x2=\"120\" y2=\"180\" />}\r\n      {wrongLetters[5] && <line x1=\"140\" y1=\"150\" x2=\"160\" y2=\"180\" />}\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default FigureContainer;\r\n","export const notification = (setter) => {\r\n  setter(true);\r\n  setTimeout(() => {\r\n    setter(false);\r\n  }, 2000);\r\n};\r\n\r\nexport const getStatus = (sw, cl, wl) => {\r\n  let status = 'win';\r\n\r\n  sw.split('').forEach((letter) => {\r\n    if (!cl.includes(letter)) {\r\n      status = '';\r\n    }\r\n  });\r\n\r\n  if (wl.length === 6) status = 'lose';\r\n\r\n  return status;\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { getStatus } from '../Helpers';\r\n\r\nfunction FinalMessage({\r\n  selectedWord,\r\n  wrongLetters,\r\n  correctLetters,\r\n  setPlayable,\r\n  playAgain,\r\n}) {\r\n  let finalMsg = '';\r\n  let playable = true;\r\n\r\n  if (getStatus(selectedWord, correctLetters, wrongLetters) === 'win') {\r\n    finalMsg = `Congratulations! You won! ðŸ˜ƒ`;\r\n    playable = false;\r\n  } else if (getStatus(selectedWord, correctLetters, wrongLetters) === 'lose') {\r\n    finalMsg = `Unfortunately you lost.ðŸ˜•`;\r\n    playable = false;\r\n  }\r\n\r\n  useEffect(() => setPlayable(playable));\r\n\r\n  return (\r\n    <div\r\n      className=\"popup-container\"\r\n      style={finalMsg !== '' ? { display: 'flex' } : {}}\r\n    >\r\n      <div className=\"popup\">\r\n        <h2>{finalMsg}</h2>\r\n        <h3>...the word was: {selectedWord}</h3>\r\n        <button onClick={playAgain}>Play Again</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FinalMessage;\r\n","import React from 'react';\r\n\r\nfunction Notification({ showNotification }) {\r\n  return (\r\n    <div\r\n      className={`notification-container ${showNotification ? 'show' : ''}`}\r\n      id=\"notification-container\"\r\n    >\r\n      <p>You have already entered this letter</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\n\r\nfunction WrongLetters({ wrongLetters }) {\r\n  return (\r\n    <div className=\"wrong-letters-container\">\r\n      <div id=\"wrong-letters\">\r\n        {wrongLetters.length > 0 ? <p>Wrong</p> : ''}\r\n        {wrongLetters.map((letter, i) => (\r\n          <span key={i}>{letter}</span>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WrongLetters;\r\n","import React from 'react';\r\n\r\nfunction Word({ selectedWord, correctLetters }) {\r\n  return (\r\n    <div className=\"word\">\r\n      {selectedWord.split('').map((letter, i) => (\r\n        <span key={i} className=\"letter\">\r\n          {correctLetters.includes(letter) ? letter : ''}\r\n        </span>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Word;\r\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nimport Header from './components/Header';\nimport FigureContainer from './components/FigureContainer';\nimport FinalMessage from './components/FinalMessage';\nimport Notification from './components/Notification';\nimport WrongLetters from './components/WrongLetters';\nimport Word from './components/Word';\nimport { notification } from './Helpers';\n\nconst words = ['application', 'programming', 'interface', 'wizard'];\n\nlet selectedWord = words[Math.floor(Math.random() * words.length)];\n\nfunction App() {\n  const [playable, setPlayable] = useState(true);\n  const [correctLetters, setCorrectLetter] = useState([]);\n  const [wrongLetters, setWrongLetters] = useState([]);\n  const [showNotification, setShowNotification] = useState(false);\n\n  useEffect(() => {\n    function keyHandler(e) {\n      if (playable && e.keyCode >= 65 && e.keyCode <= 90) {\n        const letter = e.key.toLowerCase();\n\n        if (selectedWord.includes(letter)) {\n          if (!correctLetters.includes(letter)) {\n            setCorrectLetter((c) => [...c, letter]);\n          } else {\n            notification(setShowNotification);\n          }\n        } else {\n          if (!wrongLetters.includes(letter)) {\n            setWrongLetters((w) => [...w, letter]);\n          } else {\n            notification(setShowNotification);\n          }\n        }\n      }\n    }\n    window.addEventListener('keydown', keyHandler);\n\n    return () => {\n      window.removeEventListener('keydown', keyHandler);\n    };\n  }, [playable, wrongLetters, correctLetters]);\n\n  const playAgain = () => {\n    setPlayable(true);\n\n    setCorrectLetter([]);\n    setWrongLetters([]);\n\n    selectedWord = words[Math.floor(Math.random() * words.length)];\n  };\n\n  return (\n    <>\n      <Header />\n      <div className=\"game-container\">\n        <FigureContainer wrongLetters={wrongLetters} />\n        <WrongLetters wrongLetters={wrongLetters} />\n        <Word selectedWord={selectedWord} correctLetters={correctLetters} />\n      </div>\n\n      <FinalMessage\n        selectedWord={selectedWord}\n        wrongLetters={wrongLetters}\n        correctLetters={correctLetters}\n        setPlayable={setPlayable}\n        playAgain={playAgain}\n      />\n      <Notification showNotification={showNotification} />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}